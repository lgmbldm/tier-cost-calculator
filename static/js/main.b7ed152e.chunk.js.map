{"version":3,"sources":["App.js","index.js"],"names":["App","tierTypes","name","action","useState","tiers","setTiers","tierType","setTierType","current","setCurrent","goal","setGoal","loadData","a","fetch","process","config","json","configJson","useEffect","tier","length","amount","calculateTotalPrice","price","forEach","breakeven","marginal","denom","parseInt","Math","ceil","className","value","onChange","event","target","Object","keys","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7ed152e.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport './App.css';\n\nfunction App() {\n  const tierTypes = {\n    \"maxBetTiers\": {\n      name: \"Snake Oil\",\n      action: \"\"\n    },\n    \"teamWinCoinTiers\": {\n      name: \"Popcorn\",\n      action: \"wins\"\n    },\n    \"teamLossCoinTiers\": {\n      name: \"Stale Popcorn\",\n      action: \"losses\"\n    },\n    \"idolHitsTiers\": {\n      name: \"Sunflower Seeds\",\n      action: \"hits\"\n    },\n    \"idolHomersTiers\": {\n      name: \"Hot Dog\",\n      action: \"homers\"\n    },\n    \"idolStrikeoutsTiers\": {\n      name: \"Chips\",\n      action: \"strikeouts\"\n    },\n    \"idolShutoutsTiers\": {\n      name: \"Burger\",\n      action: \"shutouts\"\n    },\n    \"floodClearTiers\": {\n      name: \"Slushie\",\n      action: \"cleared baserunners\"\n    },\n    \"blackHoleTiers\": {\n      name: \"Wet Pretzel\",\n      action: \"swallowed wins\"\n    },\n    \"idolStealTiers\": {\n      name: \"Pickles\",\n      action: \"steals\"\n    },\n    \"idolHomerAllowedTiers\": {\n      name: \"Meatball\",\n      action: \"homers allowed\"\n    },\n    \"timeOffTiers\": {\n      name: \"Breakfast\",\n      action: \"\"\n    },\n    \"sunTwoTiers\": {\n      name: \"Doughnut\",\n      action: \"wins set\"\n    },\n    \"idolPitcherWinTiers\": {\n      name: \"Hot Fries\",\n      action: \"pitcher wins\"\n    },\n    \"idolPitcherLoseTiers\": {\n      name: \"Cold Fries\",\n      action: \"pitcher losses\"\n    },\n    \"teamShamedTiers\": {\n      name: \"Lemonade\",\n      action: \"shames against\"\n    },\n    \"teamShamingTiers\": {\n      name: \"Taffy\",\n      action: \"shamings\"\n    },\n    \"incinerationTiers\": {\n      name: \"Sundae\",\n      action: \"incinerations\"\n    },\n    \"consumerTiers\": {\n      name: \"Chum\",\n      action: \"consumer attacks\"\n    }\n  };\n  const [tiers, setTiers] = useState(null);\n  const [tierType, setTierType] = useState(\"maxBetTiers\");\n  const [current, setCurrent] = useState(0);\n  const [goal, setGoal] = useState(1000);\n\n  const loadData = async () => {\n    const config = await fetch(`${process.env.PUBLIC_URL}/config.json`);\n    const configJson = await config.json();\n    setTiers(configJson);\n  };\n\n  useEffect(() => {\n    loadData();\n  }, [])\n\n  useEffect(() => {\n    const tier = tiers?.[tierType];\n    setCurrent(0);\n    setGoal(tier?.[tier?.length - 1].amount);\n  }, [tierType, tiers]);\n\n  const calculateTotalPrice = () => {\n    let price = 0;\n    tiers?.[tierType].forEach(tier => {\n      if (tier.amount > current && tier.amount <= goal) {\n        price += tier.price;\n      }\n    });\n    return price;\n  };\n\n  const breakeven = (marginal) => {\n    const denom = marginal ? (goal - current) : parseInt(goal);\n    return denom !== 0 ? Math.ceil(calculateTotalPrice() / denom) : 0;\n  };\n\n\n  return (\n    <div className=\"container\">\n      <div>\n        <label>Snack</label>\n        <select value={tierType} onChange={event => setTierType(event.target.value)}>\n          {tiers && Object.keys(tiers).map(tierType =>\n            <option value={tierType} key={tierType}>{tierTypes[tierType]?.name || tierType}</option>\n          )}\n        </select>\n      </div>\n      <div>\n        <label>Current Earning</label>\n        <select value={current} onChange={event => setCurrent(event.target.value)}>\n          <option value={0} key={0}>{0}</option>\n          {tiers && tiers[tierType].map(tier =>\n            <option value={tier.amount} key={tier.amount}>{tier.amount}</option>\n          )}\n        </select>\n      </div>\n      <div>\n        <label>Goal Earning</label>\n        <select value={goal} onChange={event => setGoal(event.target.value)}>\n          <option value={0} key={0}>{0}</option>\n          {tiers && tiers[tierType].map(tier =>\n            <option value={tier.amount} key={tier.amount}>{tier.amount}</option>\n          )}\n        </select>\n      </div>\n      <h4>Total Price: {calculateTotalPrice()}</h4>\n      {!!tierTypes[tierType]?.action && <h4>Breakeven: {`${breakeven(false)} ${tierTypes[tierType]?.action || tierType}`}</h4>}\n      {!!tierTypes[tierType]?.action && <h4>Marginal Breakeven: {`${breakeven(true)} ${tierTypes[tierType]?.action || tierType}`}</h4>}\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}