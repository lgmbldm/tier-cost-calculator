{"version":3,"sources":["App.js","index.js"],"names":["App","tierTypes","name","action","useState","tiers","setTiers","tierType","setTierType","current","setCurrent","goal","setGoal","loadData","a","fetch","process","config","json","configJson","useEffect","tier","amount","length","calculateTotalPrice","price","forEach","breakeven","marginal","Math","ceil","className","value","onChange","event","target","Object","keys","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b502e25d.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport './App.css';\n\nfunction App() {\n  const tierTypes = {\n    \"maxBetTiers\": {\n      name: \"Snake Oil\",\n      action: \"\"\n    },\n    \"teamWinCoinTiers\": {\n      name: \"Popcorn\",\n      action: \"wins\"\n    },\n    \"teamLossCoinTiers\": {\n      name: \"Stale Popcorn\",\n      action: \"losses\"\n    },\n    \"idolHitsTiers\": {\n      name: \"Sunflower Seeds\",\n      action: \"hits\"\n    },\n    \"idolHomersTiers\": {\n      name: \"Hot Dog\",\n      action: \"homers\"\n    },\n    \"idolStrikeoutsTiers\": {\n      name: \"Chips\",\n      action: \"strikeouts\"\n    },\n    \"idolShutoutsTiers\": {\n      name: \"Burger\",\n      action: \"shutouts\"\n    },\n    \"floodClearTiers\": {\n      name: \"Slushie\",\n      action: \"cleared baserunners\"\n    },\n    \"blackHoleTiers\": {\n      name: \"Wet Pretzel\",\n      action: \"swallowed wins\"\n    },\n    \"idolStealTiers\": {\n      name: \"Pickles\",\n      action: \"steals\"\n    }\n  };\n  const [tiers, setTiers] = useState(null);\n  const [tierType, setTierType] = useState(\"maxBetTiers\");\n  const [current, setCurrent] = useState(0);\n  const [goal, setGoal] = useState(1000);\n\n  const loadData = async () => {\n    const config = await fetch(`${process.env.PUBLIC_URL}/config.json`);\n    const configJson = await config.json();\n    setTiers(configJson);\n  };\n\n  useEffect(() => {\n    loadData();\n  }, [])\n\n  useEffect(() => {\n    const tier = tiers?.[tierType];\n    setCurrent(tier?.[0].amount);\n    setGoal(tier?.[tier?.length - 1].amount);\n  }, [tierType, tiers]);\n\n  const calculateTotalPrice = () => {\n    let price = 0;\n    tiers?.[tierType].forEach(tier => {\n      if (tier.amount > current && tier.amount <= goal) {\n        price += tier.price;\n      }\n    });\n    return price;\n  };\n\n  const breakeven = (marginal) => {\n    return Math.ceil(calculateTotalPrice() / (marginal ? (goal - current) : goal));\n  };\n\n\n  return (\n    <div className=\"container\">\n      <div>\n        <label>Snack</label>\n        <select value={tierType} onChange={event => setTierType(event.target.value)}>\n          {tiers && Object.keys(tiers).map(tierType =>\n            <option value={tierType} key={tierType}>{tierTypes[tierType]?.name || tierType}</option>\n          )}\n        </select>\n      </div>\n      <div>\n        <label>Current Earning</label>\n        <select value={current} onChange={event => setCurrent(event.target.value)}>\n          {tiers && tiers[tierType].map(tier =>\n            <option value={tier.amount} key={tier.amount}>{tier.amount}</option>\n          )}\n        </select>\n      </div>\n      <div>\n        <label>Goal Earning</label>\n        <select value={goal} onChange={event => setGoal(event.target.value)}>\n          {tiers && tiers[tierType].map(tier =>\n            <option value={tier.amount} key={tier.amount}>{tier.amount}</option>\n          )}\n        </select>\n      </div>\n      <h4>Total Price: {calculateTotalPrice()}</h4>\n      {tierType !== 'maxBetTiers' && <h4>Breakeven: {`${breakeven(false)} ${tierTypes[tierType]?.action || tierType}`}</h4>}\n      {tierType !== 'maxBetTiers' && <h4>Marginal Breakeven: {`${breakeven(true)} ${tierTypes[tierType]?.action || tierType}`}</h4>}\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}